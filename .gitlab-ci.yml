stages:
  - test

before_script:
    # Create SSH configuration directory if necessary (also parents with -p, mode: read/write/exec):
    #- mkdir -p --mode=700 ~/.ssh/
    # Add SSH key for jutil:
    #- echo "$ID_RSA_JUTIL_PRIVATE" > ~/.ssh/id_rsa_jutil
    # Configure SSH to use ~/.ssh/id_rsa_jutil for jugit.fz-juelich.de (-e allows \n):
    #- echo -e "Host jugit.fz-juelich.de\n\tIdentityFile ~/.ssh/id_rsa_jutil\n" > ~/.ssh/config
    # Add jugit.fz-juelich.de to known_hosts (not the same key as Jutil!):
    #- echo jugit.fz-juelich.de, 134.94.130.31 "$ID_RSA_JUTIL_PUBLIC" > ~/.ssh/known_hosts
    # Provide read access to owner (octal value code: 400) to jutil key and known_hosts with chmod:
    #- chmod 400 ~/.ssh/id_rsa_jutil
    #- chmod 400 ~/.ssh/known_hosts
    # Install necessary apps like git and mesa-utils (needed for GL):
    # TODO: Check if this is still needed after removing mayavi!?
    #- apt-get update
    #- apt-get install -y curl bzip2 git mesa-utils
    
    # Install requirements for pyramid:
    - conda info --envs
    - conda env create -q # -q: quiet/ no progressbar, because it spams the log!
    - conda info --envs
    - source activate pyramid
    - conda info --envs
    # Install jutil via deploy token access:
    - echo bla"$TEST"bla
    - pip install git+https://pyramid:fXciYhcXM6yVYqEFsxD6@jugit.fz-juelich.de/j.ungermann/jutil.git

test_miniconda:
  stage: test
  image: continuumio/miniconda3
  script:
    - python setup.py test
    # Create coverage report:
    - coverage html
  artifacts:
    paths:
      - htmlcov/


# TODO: What about windows? Better have one test (miniconda?) for windows/max/linux, each!
# TODO: Or use Dockers? What's the difference
# TODO: Instead of environment.yml (for development) use setup.py requirements for end user!
